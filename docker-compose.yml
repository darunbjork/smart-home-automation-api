# smart-home-automation-api/docker-compose.yml
services:
  api:
    build:
      context: .
      target: development
    ports:
      - "3000:3000"
      - "1883:1883"
    volumes:
      - .:/app
      - /app/node_modules
    depends_on:
      - mongo-init-replica
    environment:
      - PORT=${PORT}
      - NODE_ENV=${NODE_ENV}
      - MONGO_URI=mongodb://mongodb:27017/smarthome?replicaSet=rs0 # Add MongoDB URI
      - JWT_SECRET=${JWT_SECRET}
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET}
      - ACCESS_TOKEN_EXPIRES_IN=${ACCESS_TOKEN_EXPIRES_IN}
      - REFRESH_TOKEN_EXPIRES_IN=${REFRESH_TOKEN_EXPIRES_IN}
      - LOG_LEVEL=${LOG_LEVEL}

  mongodb: # New service for MongoDB
    image: mongo:6.0 # Use a specific version for stability
    command: ["mongod", "--replSet", "rs0", "--bind_ip_all"]
    ports:
      - "27017:27017" # Expose MongoDB port to host (for direct access/tools)
    volumes:
      - mongodb_data:/data/db # Persist MongoDB data
    environment:
      # Optional: Define admin user for MongoDB if needed, for simplicity we skip it now
      # - MONGO_INITDB_ROOT_USERNAME=admin
      # - MONGO_INITDB_ROOT_PASSWORD=password
      - MONGO_URI=mongodb://mongodb:27017/smarthome # Internal MongoDB URI for the container
    healthcheck:
      test: ["CMD", "bash", "-c", "cat < /dev/null > /dev/tcp/localhost/27017"]
      interval: 3s
      timeout: 2s
      retries: 40

  mongo-init-replica:
    image: mongo:6.0
    depends_on:
      mongodb:
        condition: service_healthy
    volumes:
      - ./init-mongo.sh:/init-mongo.sh:ro
    entrypoint: ["bash", "-c", "/init-mongo.sh"]
    restart: "no"

volumes: # Define named volume for data persistence
  mongodb_data:

networks:
  default:
    driver: bridge
